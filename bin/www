#!/usr/bin/env node
'use strict';


/**
 * Module dependencies.
 */
var app = require('../server');
var debug = require('debug')('ProjectFlashCardServerSeed2:server');
var http = require('http');
var config = require('../config/config');
/**
 * Get port from environment and store in Express.
 */
var port = config.db.port;
var ip = config.db.ip;
app.set('port', port);
app.set('ip', ip);


/**
 * Create HTTP server.
 */

var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

// Setup and connect database
require('../config/db/db');


server.listen(app.get("port"),app.get("ip"), function () {
  console.log("Server running at http://" + app.get("ip") + ":" + app.get("port") + "/" );
});
server.on('error', onError);
server.on('listening', onListening);


// setup some testdata here .....
//
//


/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
